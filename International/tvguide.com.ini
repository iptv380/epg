**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvguide.com
* @MinSWversion: V3.1
* @Revision 18 - [23/01/2021] Blackbear199
*  - showsplit fix for null title shows
*  - change start/stop to regex
* @Revision 17 - [22/01/2021] Blackbear199
*  - rewrite
* @Revision 16 - [06/07/2020] Blackbear199
*  - subdetail scrub fix
* @Revision 15 - [22/02/2017] Blackbear199
*  - re-add subdetails
* @Remarks:
* this is the base version
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvguide.com|timezone=UTC|maxdays=13|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=MPAA|episodesystem=onscreen}
*site {keepindexpage} *  enable if using a single provider,speeds up downloading
*
url_index {url|https://cmg-prod.apigee.net/v1/xapi/tvschedules/tvguide/##SourceId##/web?start=|subpage|&duration=180}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
urldate.format {datestring|yyyy-MM-dd}
subpage.format {list(format=F0 step=10800 count=8)|'global_temp_9'}
*
scope.range {(urlindex)|end}
global_temp_9.modify {calculate(format=date,unix)|'urldate'}
global_temp_1.modify {substring(type=regex)|'config_site_id' "^(\d+)"}
url_index.modify {replace|##SourceId##|'global_temp_1'}
global_temp_2.modify {substring(type=regex)|'config_site_id' "(\d+)$"}
end_scope
*
index_showsplit.scrub {regex||"channel": \{[^\]]*"sourceId":\s*'global_temp_2',[^\]]*\"programSchedules\":\s*\[(?:.*?)(?:(\{[^\}]*\})(?:.*?))*\]||}
scope.range{(splitindex)|end}
index_showsplit.modify {remove(type=regex)|"\{[^\}]*\"title\":\s*null,[^\}]*\}"}
index_showsplit.modify {cleanup(style=jsondecode)}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"startTime\":\s*(\d+)"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {regex||"startTime":\s*(\d+)||}
index_stop.scrub {regex||"endTime":\s*(\d+)||}
index_title.scrub {single|"title": "||",|",}
index_rating.scrub {single|"rating": "||",|",}
index_temp_4.scrub {regex||"airingAttrib"\s*:\s*(\d*)||}	* binairy: 1= Live, 2=??,4=New, 8=??
*
* add flags according to airing attributes
index_temp_5.modify {calculate(format=D0)|'index_temp_4' 1 and}
index_temp_6.modify {addend('index_temp_5'=="1")| (live)}
index_temp_5.modify {calculate(format=D0)|'index_temp_4' 2 and}
index_temp_6.modify {addend('index_temp_5'=="2")| (repeat)}
index_temp_5.modify {calculate(format=D0)|'index_temp_4' 4 and}
index_temp_6.modify {addend('index_temp_5'=="4")| (new)}
* next line adds * to new shows, Ttile * = new shows, Title = "not new", 2 places
index_title.modify {addend('index_temp_5'=="4")| *}
index_temp_5.modify {calculate(format=D0)|'index_temp_4' 8 and}
index_temp_6.modify {addend('index_temp_5'=="8")| (cc)}
*
index_urlshow {url||"programDetails": "||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
title.scrub {single|"name": "||",|",}
subtitle.scrub {single|"episodeTitle": "||",|",}
description.scrub	{regex||"description": "(.*?)",\n\s*"||}
category.scrub {regex||^.*?"genres":\s*\[(.*?)\]\n\s*\}\n\s*\],||}
productiondate.scrub {regex||"releaseYear":\s*(\d{4})||}
episode.scrub {regex||"episodeNumber":\s*([1-9]\d*),||}
temp_1.scrub {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"seasonNumber":\s*([1-9]\d*),||}
temp_2.scrub {single|"mcoId": ||,|,}
temp_3.scrub {single|"type": "||"|"}
*
title.modify {cleanup(style=jsondecode)}
temp_5.modify {calculate(format=D0)|'index_temp_4' 4 and}
*next line adds * to new shows, Title * = new shows, Title = "not new", 2 places
title.modify {addend('temp_5'=="4")| *}
description.modify {cleanup(style=jsondecode)}
category.modify {substring(type=regex)|"\"name\":\s*\"(.*?)\","}
category.modify {remove|Other}
episode.modify {addstart(not "")|E}
episode.modify {addstart('temp_1' not "")|S'temp_1' }
*
urlsubdetail.modify {addend|https://cmg-prod.apigee.net/v1/xapi/composer/tvguide/pages/'temp_3's/'temp_2'/web?contentOnly=true\|https://cmg-prod.apigee.net/v1/xapi/composer/tvguide/pages/'temp_3's-cast/'temp_2'/web?contentOnly=true}
urlsubdetail.headers {customheader=Accept-Encoding=gzip,deflate}
*
subdetail_director.scrub {regex||"name":\s*"([^"]*)",\n\s*"role":\s*null,\n\s*"type":\s*"Director",||}
subdetail_actor.scrub {regex||"name":\s*"([^,]*,\n\s*"role":\s*"[^,]*),\n\s*"type":\s*"Actor",||}
subdetail_producer.scrub {regex||"name":\s*"([^"]*)",\n\s*"role":\s*null,\n\s*"type":\s*"(?:Executive \|)?Producer",||}
subdetail_presenter.scrub {regex||"name":\s*"([^"]*)",\n\s*"role":\s*null,\n\s*"type":\s*"Host",||}
subdetail_commentator.scrub {regex||"name":\s*"([^"]*)",\n\s*"role":\s*null,\n\s*"type":\s*"Commentator",||}
subdetail_composer.scrub {regex||"name":\s*"([^"]*)",\n\s*"role":\s*null,\n\s*"type":\s*"Composer",||}
subdetail_writer.scrub {regex||"name":\s*"([^"]*)",\n\s*"role":\s*null,\n\s*"type":\s*"Screenwriter",||}
subdetail_showicon.scrub {single|"imageUrl": "||"|"}
*
subdetail_actor.modify {replace(type=regex)|".,\\n\s*\"role\":\s*."|(role=}
subdetail_actor.modify {replace(type=regex)|"\"$"|)}
subdetail_actor.modify {cleanup(style=jsondecode)}
subdetail_director.modify {substring(type=element)|0 2}
subdetail_actor.modify {substring(type=element)|0 6}
subdetail_producer.modify {substring(type=element)|0 1}
subdetail_presenter.modify {substring(type=element)|0 3}
subdetail_commentator.modify {substring(type=element)|0 3}
subdetail_composer.modify {substring(type=element)|0 1}
subdetail_writer.modify {substring(type=element)|0 1}
***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  COUNTRY FILE CREATION (only to create the xxx-channel.xml file)
**
*
* <channel update="i" site="tvguide.com" site_id="" xmltv_id="dummy">dummy</channel>
*
** @auto_xml_country_start
*url_index {url|https://cmg-prod.apigee.net/v1/xapi/tvschedules/tvguide/providercountries/web}
*subpage.format {list|null}
*index_site_id.scrub {multi(exclude="USA")|"items": [|country/|/web|]}
*index_site_channel.scrub {multi(exclude="United States of America")|"items": [|"name": "|",|]}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_country_end

***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  PROVIDER FILE CREATION BY COUNTRY(only to create the xxx-channel.xml file)
**
* use channel line from country file above
*
** @auto_xml_country-provider_start
*url_index {url|https://cmg-prod.apigee.net/v1/xapi/tvschedules/tvguide/serviceproviders/country/|channel|/web}
*subpage.format {list|null}
*index_site_id.scrub {multi|"id": ||,|,}
*index_site_channel.scrub {multi|"name": "||",|",}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_country-provider_end

***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  PROVIDER FILE CREATION BY ZIPCODE USA ONLY (only to create the xxx-channel.xml file)
**
* replace site_id="xxxx" with your zipcode
* <channel update="i" site="tvguide.com" site_id="xxxx" xmltv_id="dummy">dummy</channel>
*
** @auto_xml_provider_start
*url_index {url|https://cmg-prod.apigee.net/v1/xapi/tvschedules/tvguide/serviceproviders/zipcode/|channel|/web}
*subpage.format {list|null}
*index_site_id.scrub {multi|"id": ||,|,}
*index_site_channel.scrub {multi|"name": "||",|",}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_provider_end

***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION BY PROVIDER (only to create the xxx-channel.xml file)
**
*
* use channel line from one of the provider files created above
*
** @auto_xml_channel_start
*url_index {url|https://cmg-prod.apigee.net/v1/xapi/tvschedules/tvguide/serviceprovider/|channel|/sources/web}
*subpage.format {list|null}
*index_site_id.scrub {multi|"sourceId": ||,|,}
*index_site_channel.scrub {regex||"fullName":\s*"([^"]*",\n\s*"name":\s*"[^"]*",\n\s*"number":\s*"[^"]*)",||}
*index_site_id.modify {addstart|'config_site_id'##}
*index_site_channel.modify {replace(type=regex)|".,\\n\s*\"name\":\s*."| (}
*index_site_channel.modify {replace(type=regex)|".,\\n\s*\"number\":\s*."|) [}
*index_site_channel.modify {addend|]}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
